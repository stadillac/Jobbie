@using Jobbie.Web.Models;

@model SolicitationRoleEditViewModel
@{
    ViewData["Title"] = "Edit Solicitation Role";
}
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h2>Solicitation Role</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.SolicitationId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.SolicitationId, Model.Solicitations, Jobbie.Web.Constants.Constants.EmptySelectOptionText, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SolicitationId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectDeliverableId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.ProjectDeliverableId, Model.ProjectDeliverables, Jobbie.Web.Constants.Constants.EmptySelectOptionText, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectDeliverableId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.Workload, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Workload, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Workload, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliverableDeadline, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DeliverableDeadline, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeliverableDeadline, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.LumpSum, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LumpSum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LumpSum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.HourlyRate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.SignBonus, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SignBonus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SignBonus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card mb-2">
            <div class="card-body">
                <div class="row">
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.IsComplete, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.IsComplete, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.IsComplete, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.IsApproved, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.IsCancelled, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.IsCancelled, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.IsCancelled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.HasContractor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.HasContractor, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.HasContractor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.ContractorPaid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.ContractorPaid, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.ContractorPaid, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group">
                            @Html.CheckBoxFor(model => model.ContractorTerminated, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.ContractorTerminated, htmlAttributes: new { @class = "control-label" })
                            @Html.ValidationMessageFor(model => model.ContractorTerminated, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a class="btn btn-primary" asp-area="Admin" asp-controller="SolicitationRoles" asp-action="Index">Cancel</a>
                </div>
            </div>
        </div>
    </div>
}